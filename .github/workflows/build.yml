name: Build

on: release

env:
  CARGO_TERM_COLOR: always
  WASM_FILE_RELEASE: ./target/wasm32-unknown-unknown/release/jeu_de_la_vie.wasm
  WASM_POST_BINDGEN_FILE: ./webapp/jeu_de_la_vie_bg.wasm
  WEBAPP_DIR: ./webapp

jobs:

  native-build:

    name: Native build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    - name: Instal latest stable Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test --verbose

  wasm-build:

    name: WASM build
    runs-on: ubuntu-latest
    steps:
    - name: Install wasm-opt
      run: sudo apt-get install -y binaryen
    - name: Checkout project
      uses: actions/checkout@v3
    - name: Instal latest stable Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Install WASM LLVM triple
      run: rustup target add wasm32-unknown-unknown
    - name: Install wasm-bindgen-cli
      run: cargo install wasm-bindgen-cli
    - name: Build
      run: cargo build --release --target wasm32-unknown-unknown
#    - name: Run tests
#      run: cargo test --verbose --target wasm32-unknown-unknown
    - name: Generate JS file
      run: wasm-bindgen --no-typescript --out-dir $WEBAPP_DIR --target web $WASM_FILE_RELEASE
    - name: Optimize WASM file size
      run: wasm-opt -Oz -o $WASM_POST_BINDGEN_FILE $WASM_POST_BINDGEN_FILE
    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v2
      with:
        path: ${{ env.WEBAPP_DIR }}

  wasm-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy files via Rsync
        uses: D3rHase/rsync-deploy-action@latest
        with:
          HOST: ${{ secret.HOST }}
          PORT: ${{ secret.PORT }}
          USER: ${{ secret.USER }}
          PRIVATE_SSH_KEY: ${{ secret.PRIVATE_SSH_KEY }}
          REPOSITORY_PATH: 'webapp/*'
          SERVER_PATH: '/var/www/tonguechaude.github.io/gol/'

      - name: Notify Deployment Success
        run: echo "Deployment to ${{ secrets.HOST }} completed successfully!"
